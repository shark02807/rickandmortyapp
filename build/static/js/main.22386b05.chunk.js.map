{"version":3,"sources":["components/characterCard/style.module.css","components/statusBadge/style.module.css","components/charactersList/style.module.css","pages/characters/style.module.css","store/reducers/charactersReducer.ts","hooks/useUrlParams.ts","components/charactersList/useController.ts","constants/character.ts","components/statusBadge/index.tsx","components/characterCard/index.tsx","components/charactersList/index.tsx","pages/characters/index.tsx","App.tsx","store/store.ts","index.tsx"],"names":["module","exports","fetchAsyncCharacters","createAsyncThunk","page","getCharacters","data","console","log","error","charactersSlice","createSlice","name","initialState","characters","loading","reducers","extraReducers","pending","toString","state","fulfilled","payload","rejected","isLoading","getAllCharacters","useUrlParams","useSearchParams","searchParams","setSearchParams","pageNumber","get","useController","navigate","useNavigate","dispatch","useDispatch","charactersPageData","useSelector","paginatorPageState","useState","basicFirst","setBasicFirst","useEffect","window","scrollTo","pathname","search","onBasicPageChange","event","first","characterStatus","StatusBadge","status","className","cn","styles","badge","red","green","grey","CharactersCard","character","image","species","location","header","alt","src","card","label","locationName","CharactersList","results","pageInfo","info","container","loader","list","length","map","id","rows","totalRecords","count","onPageChange","paginator","Characters","backgroundContainer","title","main","replace","to","App","path","element","store","configureStore","reducer","charactersReducer","devTools","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.22386b05.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"style_card__1bVHW\",\"image\":\"style_image__2TGmq\",\"status\":\"style_status__55O6G\",\"badge\":\"style_badge__H3zgK\",\"name\":\"style_name__12wqy\",\"location\":\"style_location__3_18S\",\"label\":\"style_label__2omHZ\",\"locationName\":\"style_locationName__2Kk4J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"badge\":\"style_badge__yDhm3\",\"red\":\"style_red__1REKL\",\"green\":\"style_green__3alN9\",\"grey\":\"style_grey__1w3f1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"style_container__3T9ob\",\"list\":\"style_list__NMWI1\",\"paginator\":\"style_paginator__2SlSV\",\"loader\":\"style_loader__1JlsV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"style_header__36T6w\",\"backgroundContainer\":\"style_backgroundContainer__3PRr5\",\"title\":\"style_title__1-MrY\",\"main\":\"style_main__2LurO\"};","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { getCharacters } from 'rickmortyapi';\nimport { CharactersStore, CharactersSchema } from '../../types';\n\nexport const fetchAsyncCharacters = createAsyncThunk(\n  'characters/fetchAllCharacters',\n  async (page: number) => {\n    try {\n      const { data } = await getCharacters({ page });\n      return data;\n    }\n    catch (error) {\n      console.log({ error });\n    }\n});\n\nconst initialState = {\n  characters: null,\n  loading: false\n};\n\nconst charactersSlice = createSlice({\n  name: 'characters',\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [fetchAsyncCharacters.pending.toString()]: (state) => {\n      console.log('Pending');\n      return { characters: null, loading: true}\n    },\n    [fetchAsyncCharacters.fulfilled.toString()]: (state, { payload }) => {\n      console.log('Characters fetched successfully.', payload);\n      return { characters: payload, loading: false}\n    },\n    [fetchAsyncCharacters.rejected.toString()]: (state) => {\n      console.log('Characters fetch rejected.');\n      return { characters: null, loading: false}\n    },\n  }\n});\n\nexport const isLoading = (state: CharactersStore): boolean => state.characters.loading;\nexport const getAllCharacters = (state: CharactersStore): CharactersSchema => state.characters.characters;\n\nexport default charactersSlice.reducer;\n","import { useSearchParams } from 'react-router-dom';\n\nconst useUrlParams = () => {\n  let [searchParams, setSearchParams] = useSearchParams();\n  const pageNumber = searchParams.get('page');\n\n  return {\n    pageNumber,\n    setSearchParams\n  }\n}\n\nexport default useUrlParams;\n","// Base\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\n// Store\nimport { AppDispatch } from '../../store/store';\nimport {\n  fetchAsyncCharacters,\n  getAllCharacters,\n  isLoading\n} from '../../store/reducers/charactersReducer';\n//Types\nimport { CharactersSchema } from '../../types';\n// Hooks\nimport useUrlParams from '../../hooks/useUrlParams';\n\nconst useController = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch<AppDispatch>();\n  const charactersPageData: CharactersSchema = useSelector(getAllCharacters);\n  const loading = useSelector(isLoading);\n  const { pageNumber } = useUrlParams();\n  const paginatorPageState = (+pageNumber! - 1) * 20;\n  const [basicFirst, setBasicFirst] = useState(paginatorPageState);\n\n  useEffect(() => {\n    if (pageNumber !== null) {\n      dispatch(fetchAsyncCharacters(+pageNumber));\n    }\n  }, [dispatch, pageNumber]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    const navigateToPage = basicFirst / 20 + 1;\n    navigate({\n      pathname: `/characters/`,\n      search: `?page=${navigateToPage}`\n    });\n  }, [basicFirst, navigate]);\n\n  const onBasicPageChange = (event: any) => {\n    setBasicFirst(event.first);\n  }\n\n  const state = {\n    charactersPageData,\n    basicFirst,\n    pageNumber,\n    loading\n  };\n\n  return {\n    state,\n    onBasicPageChange\n  }\n}\n\nexport default useController;\n","export const characterStatus = {\n  dead: 'Dead',\n  alive: 'Alive',\n  unknown: 'unknown'\n};\n","// Base\nimport cn from 'classnames';\n// Types\nimport { Status } from '../../types';\n// HF\nimport { characterStatus } from '../../constants/character'\n// styles and assets\nimport styles from './style.module.css';\n\ninterface StatusBadgeProps {\n  status: Status;\n  className: string;\n}\n\nconst StatusBadge = ({ status, className }: StatusBadgeProps) => (\n  <div className={cn(styles.badge, className, {\n    [styles.red]: status === characterStatus.dead,\n    [styles.green]: status === characterStatus.alive,\n    [styles.grey]: status === characterStatus.unknown\n  })} />\n);\n\nexport default StatusBadge;\n","// Types\nimport { Character } from '../../types';\n//Components\nimport { Card } from 'primereact/card';\nimport StatusBadge from '../statusBadge'\n// styles and assets\nimport styles from './style.module.css';\n\ninterface CharactersCardProps {\n  character: Character;\n}\n\nconst CharactersCard = ({ character }: CharactersCardProps) => {\n  const { name, image, status, species, location } = character;\n  \n  const header = (\n    <img className={styles.image} alt={name} src={image} />\n  );\n\n  return (\n    <Card header={header} className={styles.card}>\n      <div className={styles.name}>{name}</div>\n      <div className={styles.status}>\n        <StatusBadge status={status} className={styles.badge} />\n        {status} - {species}\n      </div>\n      <div className={styles.location}>\n        <div className={styles.label}>Location:</div>\n        <div className={styles.locationName}>{location.name}</div>\n      </div>\n    </Card>\n  )\n};\n\nexport default CharactersCard;\n","// Hooks\nimport useController from './useController';\n// Component\nimport Card from '../characterCard';\nimport { Paginator } from 'primereact/paginator';\nimport { ProgressSpinner } from 'primereact/progressspinner';\n// styles and assets\nimport styles from './style.module.css';\n\nconst CharactersList = () => {\n  const { state, onBasicPageChange } = useController();\n  const {\n    charactersPageData,\n    basicFirst,\n    loading\n  } = state;\n  const { results: characters, info: pageInfo } = charactersPageData || {};\n\n  return (\n    <div className={styles.container}>\n      { loading ? <div className={styles.loader}><ProgressSpinner/></div> : null }\n      { charactersPageData ? (\n        <>\n          <div className={styles.list}>\n            { characters?.length ? (\n              characters.map(character => (\n                <Card key={character.id} character={character} />\n              ))\n            ) : null }\n          </div>\n          <Paginator\n            first={basicFirst}\n            rows={20}\n            totalRecords={pageInfo.count}\n            onPageChange={onBasicPageChange}\n            className={styles.paginator}\n          ></Paginator>\n        </>\n      ) : null }\n    </div>\n  )\n};\n\nexport default CharactersList;\n","//Base\nimport { Navigate } from \"react-router-dom\";\n// Components\nimport CharactersList from '../../components/charactersList';\n// Hooks\nimport useUrlParams from '../../hooks/useUrlParams';\n// Styles\nimport styles from './style.module.css';\n\nconst Characters = () => {\n  const { pageNumber } = useUrlParams();\n  \n  return (\n    <>\n      {\n        (!pageNumber || pageNumber === null)\n          ? <Navigate replace to='/characters/?page=1' />\n          : (\n            <>\n              <header className={styles.header}>\n                <div className={styles.backgroundContainer} />\n                <h1 className={styles.title}>Explore Rick and Morty Characters</h1>\n              </header>\n              <main className={styles.main}>\n                <CharactersList />\n              </main>\n            </>\n          )\n      }\n    </>\n  )\n};\n\nexport default Characters;\n","//Base\nimport { BrowserRouter, Routes, Route, Navigate } from \"react-router-dom\";\n// Pages\nimport Characters from './pages/characters';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={ <Navigate replace to=\"/characters\" /> } />\n        <Route path=\"/characters\" element={<Characters />} />\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport { useDispatch } from 'react-redux';\nimport charactersReducer from './reducers/charactersReducer';\n\nexport const store = configureStore({\n  reducer: {\n    characters: charactersReducer\n  },\n  devTools: true\n});\n\nexport type AppDispatch = typeof store.dispatch\nexport const useAppDispatch: () => AppDispatch = useDispatch;\n","// Base\nimport ReactDOM from 'react-dom/client';\nimport { Provider } from 'react-redux';\n// Styles\nimport './styles/index.css';\nimport 'primereact/resources/primereact.min.css';\nimport \"primereact/resources/themes/lara-light-indigo/theme.css\";\nimport \"primeicons/primeicons.css\";\n// Components\nimport App from './App';\n// Store\nimport { store } from './store/store';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\n\nroot.render( \n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n"],"sourceRoot":""}